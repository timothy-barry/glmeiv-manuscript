args <- c("/Users/timbarry/research_code/glmeiv-manuscript/nextflow_scripts/bin/run_precomp.R", "/Users/timbarry/research_offsite/gasperini-2019/at-scale/processed/gene/gasp_scale_gene_expressions.odm", "/Users/timbarry/research_offsite/glmeiv/public/gasperini/data/gene_qc_metadata.rds", "/Users/timbarry/research_offsite/glmeiv/public/gasperini/data/covariate_matrix.rds", "/Users/timbarry/research_offsite/glmeiv/public/gasperini/data/m_offsets.rds", "ENSG00000174574", "ENSG00000102054", "ENSG00000112077")
args
n_args <- length(args)
n_args
odm_fp <- args[1L]
odm_fp
metadata_fp <- args[2L]
metadata_fp
metadata_fp <- args[2L]
metadata_fp
covariate_matrix_fp <- args[3L]
covariate_matrix_fp
args[3]
args[2]
args[1]
args <- args[-1]
args
odm_fp <- args[1L]
odm_fp
metadata_fp <- args[2L]
metadata_fp
covariate_matrix_fp <- args[3L]
covariate_matrix_fp
m_offsets_fp <- args[4L]
m_offsets_fp
ids <- args[seq(5L, n_args)]
ids
####################################################
# 2. Load ODM, covariate mat, and offset; set family
####################################################
odm <- read_odm(odm_fp = odm_fp, metadata_fp = metadata_fp)
########################################
# 1. Load packages and command-line args
########################################
library(ondisc)
####################################################
# 2. Load ODM, covariate mat, and offset; set family
####################################################
odm <- read_odm(odm_fp = odm_fp, metadata_fp = metadata_fp)
odm
covariate_matrix <- readRDS(covariate_matrix_fp)
covariate_matrix
offset <- readRDS(m_offsets_fp)
offset
fam_obj <- MASS::negative.binomial(NA)
fam_obj
id <- ids[1]
id
counts <- as.numeric(odm[[id,]])
counts
precomp <- glmeiv::run_glmeiv_precomputation(y = counts,
covariate_matrix = covariate_matrix,
offset = offset,
fam = glmeiv::augment_family_object(fam_obj))
precomp
precomp$covariate_coefs
precomp$fam
precomp$fam,
precomp$fam
args <- c("/Users/timbarry/research_code/glmeiv-manuscript/nextflow_scripts/bin/run_analysis.R", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/covariate_matrix.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gene/expression_matrix.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gene_metadata.rds", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/m_offset.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gRNA/raw_grouped.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gRNA_metadata.rds", "ENSG00000077458.12", "chr18:741915-742315 /Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000077458.12.rds ENSG00000267458.1 chr18:741915-742315", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000267458.1.rds ENSG00000273568.1", "c'hr19:28546168-28546568", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000273568.1.rds)
args <- c("/Users/timbarry/research_code/glmeiv-manuscript/nextflow_scripts/bin/run_analysis.R", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/covariate_matrix.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gene/expression_matrix.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gene_metadata.rds", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/m_offset.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gRNA/raw_grouped.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gRNA_metadata.rds", "ENSG00000077458.12", "chr18:741915-742315 /Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000077458.12.rds", "ENSG00000267458.1", "chr18:741915-742315", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000267458.1.rds ENSG00000273568.1", "c'hr19:28546168-28546568", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000273568.1.rds)
args <- c("/Users/timbarry/research_code/glmeiv-manuscript/nextflow_scripts/bin/run_analysis.R", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/covariate_matrix.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gene/expression_matrix.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gene_metadata.rds", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/m_offset.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gRNA/raw_grouped.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gRNA_metadata.rds", "ENSG00000077458.12", "chr18:741915-742315 /Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000077458.12.rds", "ENSG00000267458.1", "chr18:741915-742315", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000267458.1.rds ENSG00000273568.1", "chr19:28546168-28546568", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000273568.1.rds")
args
args <- c("/Users/timbarry/research_code/glmeiv-manuscript/nextflow_scripts/bin/run_analysis.R", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/covariate_matrix.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gene/expression_matrix.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gene_metadata.rds", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/m_offset.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gRNA/raw_grouped.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gRNA_metadata.rds", "ENSG00000077458.12", "chr18:741915-742315 /Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000077458.12.rds", "ENSG00000267458.1", "chr18:741915-742315", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000267458.1.rds", "ENSG00000273568.1", "chr19:28546168-28546568", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000273568.1.rds")
args
args <- c("/Users/timbarry/research_code/glmeiv-manuscript/nextflow_scripts/bin/run_analysis.R", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/covariate_matrix.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gene/expression_matrix.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gene_metadata.rds", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/m_offset.rds", "/Users/timbarry/research_offsite/xie-2019/processed/gRNA/raw_grouped.odm", "/Users/timbarry/research_offsite/glmeiv/public/xie/data/gRNA_metadata.rds", "ENSG00000077458.12", "chr18:741915-742315", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000077458.12.rds", "ENSG00000267458.1", "chr18:741915-742315", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000267458.1.rds", "ENSG00000273568.1", "chr19:28546168-28546568", "/Users/timbarry/research_offsite/glmeiv/work/c4/6b912059a67fb5e25ed130ec3947e9/ENSG00000273568.1.rds")
args
########################################
# 1. Load packages and command-line args
########################################
library(magrittr)
library(ondisc)
n_args <- length(args)
covariate_matrix_fp <- args[1L]
gene_odm_fp <- args[2L]
gene_metadata_fp <- args[3L]
m_offsets_fp <- args[4L]
gRNA_odm_fp <- args[5L]
gRNA_metadata_fp <- args[6L]
other_args <- args[seq(7L, n_args)]
covariate_matrix_fp
args <- args[-1]
covariate_matrix_fp <- args[1L]
covariate_matrix_fp
gene_odm_fp <- args[2L]
gene_odm_fp
gene_metadata_fp <- args[3L]
gene_metadata_fp
m_offsets_fp <- args[4L]
m_offsets_fp
gRNA_odm_fp <- args[5L]
gRNA_odm_fp
gRNA_metadata_fp
gRNA_odm_fp <- args[5L]
gRNA_metadata_fp <- args[6L]
gRNA_odm_fp
gRNA_metadata_fp
other_args <- args[seq(7L, n_args)]
other_args
n_args <- length(args)
other_args <- args[seq(7L, n_args)]
other_args
#########################################
# 2. Load ODMs, covariate matrix, offsets
#########################################
gene_odm <- read_odm(gene_odm_fp, gene_metadata_fp)
gRNA_odm <- read_odm(gRNA_odm_fp, gRNA_metadata_fp)
m_offset <- readRDS(m_offsets_fp)
covariate_matrix <- readRDS(covariate_matrix_fp)
#############################################################
# 3. Set vectors of gene IDs, gRNA IDs, and precomp locations
#############################################################
gene_ids <- other_args[seq(from = 1L, by = 3, to = length(other_args))]
gRNA_ids <- other_args[seq(from = 2L, by = 3, to = length(other_args))]
gene_precomp_fps <- other_args[seq(from = 3L, by = 3, to = length(other_args))]
n_pairs <- length(gene_ids)
n_pairs
############################################################
# 4. Loop through pairs, running method given precomputation
############################################################
out_l <- vector(mode = "list", length = n_pairs)
out_l
i <- 1
gene <- gene_ids[i]
if (i == 1 || gene_ids[i] != gene_ids[i - 1]) { # only load gene data if necessary
m <- as.numeric(gene_odm[[gene,]]); m_fam <- readRDS(gene_precomp_fps[i])
}
gRNA <- gRNA_ids[i]
gene
gRNA
if (i == 1 || gRNA_ids[i] != gRNA_ids[i - 1]) { # likewise for gRNAs
g <- as.numeric(gRNA_odm[[gRNA,]])
}
head(m)
head(g)
table(g)
# loop through different thresholds, fitting model to each
# perform threshold
phat <- as.integer(g >= threshold)
##############################
# 0. Set a few hyperparameters
##############################
threshold <- 3L
# loop through different thresholds, fitting model to each
# perform threshold
phat <- as.integer(g >= threshold)
phat
# run thresholding method
fit <- glmeiv::run_thresholding_method(phat = phat, m = m, m_fam = m_fam,
m_offset = m_offset, covariate_matrix = covariate_matrix,
n_examples_per_param = 5) %>% dplyr::mutate(gene_id = gene, gRNA_id = gRNA)
fit
out_l[[i]] <- coef_df
out_l[[i]] <- fit
out_l <- vector(mode = "list", length = n_pairs)
for (i in seq(1L, n_pairs)) {
gene <- gene_ids[i]
if (i == 1 || gene_ids[i] != gene_ids[i - 1]) { # only load gene data if necessary
m <- as.numeric(gene_odm[[gene,]]); m_fam <- readRDS(gene_precomp_fps[i])
}
gRNA <- gRNA_ids[i]
if (i == 1 || gRNA_ids[i] != gRNA_ids[i - 1]) { # likewise for gRNAs
g <- as.numeric(gRNA_odm[[gRNA,]])
}
# loop through different thresholds, fitting model to each
# perform threshold
phat <- as.integer(g >= threshold)
# run thresholding method
fit <- glmeiv::run_thresholding_method(phat = phat, m = m, m_fam = m_fam,
m_offset = m_offset, covariate_matrix = covariate_matrix,
n_examples_per_param = 5) %>% dplyr::mutate(gene_id = gene, gRNA_id = gRNA)
out_l[[i]] <- fit
}
out <- do.call(rbind, out_l) %>% dplyr::mutate_at(c("parameter", "target", "gene_id", "gRNA_id"), factor)
out
saveRDS(object = out, file = "raw_result.rds")
out
g_prime <- g[g >= 1]
head(g_prime)
curr_threshold <- mean(g_prime)
curr_threshold
##############################
# 0. Set a few hyperparameters
##############################
threshold <- 3L
is.numeric(threshold)
##############################
# 0. Set a few hyperparameters
##############################
threshold <- 3L
########################################
# 1. Load packages and command-line args
########################################
library(magrittr)
library(ondisc)
n_args <- length(args)
covariate_matrix_fp <- args[1L]
gene_odm_fp <- args[2L]
gene_metadata_fp <- args[3L]
m_offsets_fp <- args[4L]
gRNA_odm_fp <- args[5L]
gRNA_metadata_fp <- args[6L]
other_args <- args[seq(7L, n_args)]
#########################################
# 2. Load ODMs, covariate matrix, offsets
#########################################
gene_odm <- read_odm(gene_odm_fp, gene_metadata_fp)
gRNA_odm <- read_odm(gRNA_odm_fp, gRNA_metadata_fp)
m_offset <- readRDS(m_offsets_fp)
covariate_matrix <- readRDS(covariate_matrix_fp)
#############################################################
# 3. Set vectors of gene IDs, gRNA IDs, and precomp locations
#############################################################
gene_ids <- other_args[seq(from = 1L, by = 3, to = length(other_args))]
gRNA_ids <- other_args[seq(from = 2L, by = 3, to = length(other_args))]
gene_precomp_fps <- other_args[seq(from = 3L, by = 3, to = length(other_args))]
n_pairs <- length(gene_ids)
############################################################
# 4. Loop through pairs, running method given precomputation
############################################################
out_l <- vector(mode = "list", length = n_pairs)
for (i in seq(1L, n_pairs)) {
gene <- gene_ids[i]
if (i == 1 || gene_ids[i] != gene_ids[i - 1]) { # only load gene data if necessary
m <- as.numeric(gene_odm[[gene,]]); m_fam <- readRDS(gene_precomp_fps[i])
}
gRNA <- gRNA_ids[i]
if (i == 1 || gRNA_ids[i] != gRNA_ids[i - 1]) { # likewise for gRNAs
g <- as.numeric(gRNA_odm[[gRNA,]])
}
# loop through different thresholds, fitting model to each
# perform threshold
if (is.numeric(threshold)) {
curr_threshold <- threshold
} else {
g_prime <- g[g >= 1]
curr_threshold <- mean(g_prime)
}
phat <- as.integer(g >= curr_threshold)
# run thresholding method
fit <- glmeiv::run_thresholding_method(phat = phat, m = m, m_fam = m_fam,
m_offset = m_offset, covariate_matrix = covariate_matrix,
n_examples_per_param = 5) %>% dplyr::mutate(gene_id = gene, gRNA_id = gRNA)
out_l[[i]] <- fit
}
out <- do.call(rbind, out_l) %>% dplyr::mutate_at(c("parameter", "target", "gene_id", "gRNA_id"), factor)
