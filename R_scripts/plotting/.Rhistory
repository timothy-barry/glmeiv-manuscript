########################
resampling_df <- readRDS(paste0(result_dir, "/resampling_result.rds"))
resampling_df
pair_id <- "ENSG00000143947:RPS27A_TSS"
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE)) %>%
tidyr::pivot_longer(cols = c("m_est", "m_ci_upper", "m_ci_lower"), names_to = "metric")
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = value, col = metric)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), colour = my_cols[1]) +
geom_line(size = 0.8) + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
df_synth
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = value, col = metric)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), colour = my_cols[1]) +
geom_line(size = 0.8) + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
df_synth
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est, col = metric)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), colour = my_cols[1]) +
geom_line(size = 0.8) + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line() + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line() + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper)) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line() + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey50") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line() + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey20") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line() + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey80") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line(lwd = 0.2) + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey80") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line(lwd = 1) + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey80") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey80") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line(lwd = 1) + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper)) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line(lwd = 1) + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey80") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
pair_id <- pair_ids[10]
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line(lwd = 1) + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey80") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
geom_line() + theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey80") +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey80") + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), col = "grey20") + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey20") + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper, fill = "grey20")) + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey50") + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70") + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey60", alpha = 0.5) + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey60", alpha = 0.5) + geom_line() +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey60", alpha = 0.5) + geom_line(lwd = 1.1) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey60", alpha = 0.5) + geom_line(lwd = 0.9) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey60", alpha = 0.5) + geom_line(lwd = 0.8) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey60", alpha = 0.5) + geom_line(lwd = 0.75) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[1]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey60", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey60", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
p
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.01)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, NA)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.1)))
p
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
return(p)
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank()) + scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2]) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.6) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.spacing.x = unit(4, "mm")) + scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
i
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2], lwd = 0.75) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.75) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.spacing.x = unit(4, "mm")) + scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2], lwd = 0.75) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.75) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.spacing.x = unit(4, "mm")) + scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
# an "aggregate" version of the above analysis
aggregate_df <- resampling_df %>% filter(contam_level >= 0, parameter == "m_perturbation", target == "estimate") %>%
select(-parameter, -target) %>% group_by(method, pair_id, contam_level) %>%
summarize(m = mean(value)) %>% ungroup() %>% group_by(method, pair_id) %>%
group_modify(.f = function(tbl, key) {
baseline_est <- tbl$m[tbl$contam_level == 0]
p_change <- abs(tbl$m - baseline_est)/baseline_est
mutate(tbl, p_change = p_change)
}) %>% ungroup() %>% group_by(contam_level, method) %>% summarize(median_p_change = median(p_change),
mean_p_change = mean(p_change),
lower_median_ci = sort(p_change)[qbinom(.025, length(p_change), 0.5)],
upper_median_ci = sort(p_change)[qbinom(.975, length(p_change), 0.5)]) %>%
mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
ggplot(data = aggregate_df %>% filter(contam_level <= 0.4),
mapping = aes(x = contam_level, y = median_p_change, col = method)) +
geom_hline(yintercept = 0, col = "black", lwd = 0.5) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.21, 0.82), legend.title=element_blank()) +
scale_color_manual(values = c(my_cols[1], my_cols[3])) +
xlab("Excess background contamination") + scale_x_continuous(expand = expansion(mult = c(0,0.01))) + geom_ribbon(aes(ymin = lower_median_ci, ymax = upper_median_ci, fill = method), alpha = 0.5) + geom_line(lwd = 0.85) +
ylab("Relative est. change (median)") + scale_fill_manual(values = c(my_cols[1], my_cols[3]))
ggplot(data = aggregate_df %>% filter(contam_level <= 0.4),
mapping = aes(x = contam_level, y = median_p_change, col = method)) +
geom_hline(yintercept = 0, col = "black", lwd = 0.5) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.21, 0.82), legend.title=element_blank()) +
scale_color_manual(values = c(my_cols[1], my_cols[3])) +
xlab("Excess background contamination") + scale_x_continuous(expand = expansion(mult = c(0,0.01))) + geom_ribbon(aes(ymin = lower_median_ci, ymax = upper_median_ci, fill = method), alpha = 0.5) + geom_line(lwd = 0.85) +
ylab("Median of relative estimate change") + scale_fill_manual(values = c(my_cols[1], my_cols[3]))
p2 <- ggplot(data = aggregate_df %>% filter(contam_level <= 0.4),
mapping = aes(x = contam_level, y = median_p_change, col = method)) +
geom_hline(yintercept = 0, col = "black", lwd = 0.5) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.21, 0.82), legend.title=element_blank()) +
scale_color_manual(values = c(my_cols[1], my_cols[3])) +
xlab("Excess background contamination") + scale_x_continuous(expand = expansion(mult = c(0,0.01))) + geom_ribbon(aes(ymin = lower_median_ci, ymax = upper_median_ci, fill = method), alpha = 0.5) + geom_line(lwd = 0.85) +
ylab("Median of relative estimate change") + scale_fill_manual(values = c(my_cols[1], my_cols[3]))
p1
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
f(resampling_df, pair_ids[11], x_max = 0.4) %>% plot()
f(resampling_df, pair_ids[12], x_max = 0.4) %>% plot()
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
# an "aggregate" version of the above analysis
aggregate_df <- resampling_df %>% filter(contam_level >= 0, parameter == "m_perturbation", target == "estimate") %>%
select(-parameter, -target) %>% group_by(method, pair_id, contam_level) %>%
summarize(m = mean(value)) %>% ungroup() %>% group_by(method, pair_id) %>%
group_modify(.f = function(tbl, key) {
baseline_est <- tbl$m[tbl$contam_level == 0]
p_change <- abs(tbl$m - baseline_est)/baseline_est
mutate(tbl, p_change = p_change)
}) %>% ungroup() %>% group_by(contam_level, method) %>% summarize(median_p_change = median(p_change),
mean_p_change = mean(p_change),
lower_median_ci = sort(p_change)[qbinom(.025, length(p_change), 0.5)],
upper_median_ci = sort(p_change)[qbinom(.975, length(p_change), 0.5)]) %>%
mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
p2 <- ggplot(data = aggregate_df %>% filter(contam_level <= 0.4),
mapping = aes(x = contam_level, y = median_p_change, col = method)) +
geom_hline(yintercept = 0, col = "black", lwd = 0.5) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.21, 0.82), legend.title=element_blank()) +
scale_color_manual(values = c(my_cols[1], my_cols[3])) +
xlab("Excess background contamination") + scale_x_continuous(expand = expansion(mult = c(0,0.01))) + geom_ribbon(aes(ymin = lower_median_ci, ymax = upper_median_ci, fill = method), alpha = 0.5) + geom_line(lwd = 0.85) +
ylab("Median of relative estimate change") + scale_fill_manual(values = c(my_cols[1], my_cols[3]))
p2
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2], lwd = 0.75) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.75) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.spacing.x = unit(4, "mm"), panel.border = element_blank()) +
scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2], lwd = 0.75) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.75) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.spacing.x = unit(4, "mm"), panel.border = element_blank(), axis.line = element_line(colour = "black")) +
scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2], lwd = 0.75) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.75) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.spacing.x = unit(4, "mm"), panel.border = element_blank(), axis.line = element_line(colour = "black")) +
scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
p2 <- ggplot(data = aggregate_df %>% filter(contam_level <= 0.4),
mapping = aes(x = contam_level, y = median_p_change, col = method)) +
geom_hline(yintercept = 0, col = "black", lwd = 0.5) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.21, 0.82), legend.title=element_blank()) +
scale_color_manual(values = c(my_cols[1], my_cols[3])) +
xlab("Excess background contamination") + scale_x_continuous(expand = expansion(mult = c(0,0.01))) + geom_ribbon(aes(ymin = lower_median_ci, ymax = upper_median_ci, fill = method), alpha = 0.5) + geom_line(lwd = 0.85) +
ylab("Median REC across genes") + scale_fill_manual(values = c(my_cols[1], my_cols[3]))
p2
p2 <- ggplot(data = aggregate_df %>% filter(contam_level <= 0.4),
mapping = aes(x = contam_level, y = median_p_change, col = method)) +
geom_hline(yintercept = 0, col = "black", lwd = 0.5) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.21, 0.82), legend.title=element_blank()) +
scale_color_manual(values = c(my_cols[1], my_cols[3])) +
xlab("Excess background contamination") + scale_x_continuous(expand = expansion(mult = c(0,0.01))) + geom_ribbon(aes(ymin = lower_median_ci, ymax = upper_median_ci, fill = method), alpha = 0.5) + geom_line(lwd = 0.85) +
ylab("Median REC across pairs") + scale_fill_manual(values = c(my_cols[1], my_cols[3]))
p2
p2
library(dplyr)
library(ggplot2)
my_cols <- c("firebrick3", "dodgerblue3", "orchid4")
fig_dir <- paste0(.get_config_path("LOCAL_CODE_DIR"), "glmeiv-manuscript/figures/data_analysis")
if (!dir.exists(fig_dir)) dir.create(fig_dir)
result_dir <- paste0(.get_config_path("LOCAL_GLMEIV_DATA_DIR"), "public/gasperini/results")
########################
# 1. Resampling analysis
########################
resampling_df <- readRDS(paste0(result_dir, "/resampling_result.rds"))
# a function to plot the result given a given pair
f <- function(resampling_df, pair_id, x_max = 0.5) {
df <- dplyr::filter(resampling_df, pair_id == !!pair_id, contam_level <= x_max) %>%
dplyr::filter(parameter == "m_perturbation", target %in% c("estimate", "confint_lower", "confint_upper")) %>%
dplyr::select(-parameter, -pair_id) %>%
tidyr::pivot_wider(data = ., names_from = "target", values_from = "value") %>%
dplyr::mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
df_synth <- df %>% dplyr::filter(contam_level >= 0) %>% dplyr::group_by(method, contam_level) %>%
dplyr::summarize(m_est = mean(estimate, na.rm = TRUE), m_ci_upper = mean(confint_upper, na.rm = TRUE), m_ci_lower = mean(confint_lower, na.rm = TRUE))
df_gt <- df %>% dplyr::filter(contam_level == -1)
p <- ggplot(data = df_synth, mapping = aes(x = contam_level, y = m_est)) + facet_grid(.~method) +
geom_hline(data = df_gt, mapping = aes(yintercept = estimate), color = my_cols[2], lwd = 0.75) +
theme_bw() + xlab("Excess background contamination") +
scale_color_manual(values=c("grey70", "grey70", "black")) + ylab("Estiamte") + geom_ribbon(aes(ymin = m_ci_lower, ymax = m_ci_upper), fill = "grey70", alpha = 0.5) + geom_line(lwd = 0.75) +
theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.spacing.x = unit(4, "mm"), panel.border = element_blank(), axis.line = element_line(colour = "black")) +
scale_x_continuous(expand = expansion(mult = c(0, 0.05)))
return(p)
}
pair_ids <- as.character(unique(resampling_df$pair_id))
f(resampling_df, pair_ids[10], x_max = 0.4) %>% plot()
# an "aggregate" version of the above analysis
aggregate_df <- resampling_df %>% filter(contam_level >= 0, parameter == "m_perturbation", target == "estimate") %>%
select(-parameter, -target) %>% group_by(method, pair_id, contam_level) %>%
summarize(m = mean(value)) %>% ungroup() %>% group_by(method, pair_id) %>%
group_modify(.f = function(tbl, key) {
baseline_est <- tbl$m[tbl$contam_level == 0]
p_change <- abs(tbl$m - baseline_est)/baseline_est
mutate(tbl, p_change = p_change)
}) %>% ungroup() %>% group_by(contam_level, method) %>% summarize(median_p_change = median(p_change),
mean_p_change = mean(p_change),
lower_median_ci = sort(p_change)[qbinom(.025, length(p_change), 0.5)],
upper_median_ci = sort(p_change)[qbinom(.975, length(p_change), 0.5)]) %>%
mutate(method = factor(method, c("glmeiv", "thresholding"), c("GLM-EIV", "Thresholding")))
p2 <- ggplot(data = aggregate_df %>% filter(contam_level <= 0.4),
mapping = aes(x = contam_level, y = median_p_change, col = method)) +
geom_hline(yintercept = 0, col = "black", lwd = 0.5) + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = c(0.21, 0.82), legend.title=element_blank()) +
scale_color_manual(values = c(my_cols[1], my_cols[3])) +
xlab("Excess background contamination") + scale_x_continuous(expand = expansion(mult = c(0,0.01))) + geom_ribbon(aes(ymin = lower_median_ci, ymax = upper_median_ci, fill = method), alpha = 0.5) + geom_line(lwd = 0.85) +
ylab("Median REC across pairs") + scale_fill_manual(values = c(my_cols[1], my_cols[3]))
p2
