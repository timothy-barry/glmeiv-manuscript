library(magrittr)
library(glmeiv)
args <- commandArgs(trailingOnly = TRUE)
overwrite <- if (is.na(args[1])) FALSE else as.logical(args[1])
save_obj <- function(obj, file_path, overwrite) {
if (!file.exists(file_path)) { # if file does not exist, save
saveRDS(obj, file_path)
} else { # if file does exist, save only if overwrite true
if (overwrite) {
saveRDS(obj, file_path)
}
}
}
# Define simulatr specifier objects
sim_dir <- paste0(.get_config_path("LOCAL_GLMEIV_DATA_DIR"), "public/simulations")
sim_dir
library(magrittr)
library(glmeiv)
args <- commandArgs(trailingOnly = TRUE)
overwrite <- if (is.na(args[1])) FALSE else as.logical(args[1])
save_obj <- function(obj, file_path, overwrite) {
if (!file.exists(file_path)) { # if file does not exist, save
saveRDS(obj, file_path)
} else { # if file does exist, save only if overwrite true
if (overwrite) {
saveRDS(obj, file_path)
}
}
}
# Define simulatr specifier objects
sim_dir <- paste0(.get_config_path("LOCAL_GLMEIV_DATA_DIR"), "public/simulations/spec_objects")
sim_dir
dir.exists(sim_dir)
sim_dir
sim_dir
to_save_sim_1 <- paste0(sim_dir, "/sim_spec_1.rds")
to_save_sim_1
param_grid <- simulatr::create_param_grid_fractional_factorial(varying_values = list(m_perturbation = seq(0.0, -2, -0.2),
g_perturbation = seq(0.0, 3, 0.25)),
baseline_values = list(m_perturbation = -2,
g_perturbation = 3))
param_grid
c(poisson(), gaussian())
simulatr::create_param_grid_fractional_factorial
?simulatr::create_param_grid_two_way_factorial
param_vals <- list(g_perturbation = seq(0.5, 6, 0.5), pi = seq(0.1, 0.3, 0.1))
arm_names <- c("pi_small", "pi_intermediate", "pi_big")
arm_param <- "pi"
create_param_grid_two_way_factorial(param_vals, arm_names, arm_param)
library(simulatr)
create_param_grid_two_way_factorial(param_vals, arm_names, arm_param)
simulatr::create_param_grid_two_way_factorial(param_vals = list(m_perturbation = seq(0.0, -2, -0.2),
fam = c(poisson(), gaussian(), MASS::negative.binomial(5))))
create_param_grid_two_way_factorial
simulatr::create_param_grid_two_way_factorial(param_vals = list(m_perturbation = seq(0.0, -2, -0.2),
fam = c(poisson(), gaussian(), MASS::negative.binomial(5))),
arm_names = c("Poisson", "Gaussian", "NB"),
arm_param = c("fam"))
simulatr::create_param_grid_two_way_factorial(param_vals = list(m_perturbation = seq(0.0, -2, -0.2),
fam = c("poisson", "gaussian", "NB")),
arm_names = c("Poisson", "Gaussian", "NB"),
arm_param = c("fam"))
simulatr::create_param_grid_two_way_factorial(param_vals = list(m_perturbation = seq(0.0, -2, -0.2),
fam = c("poisson", "gaussian", "NB")),
arm_names = c("Poisson", "Gaussian", "NB"),
arm_param = c("fam"))
param_grid <- simulatr::create_param_grid_two_way_factorial(param_vals = list(m_perturbation = seq(0.0, -2, -0.2),
fam = c("poisson", "gaussian", "NB")),
arm_names = c("Poisson", "Gaussian", "NB"),
arm_param = c("fam"))
param_grid <- simulatr::create_param_grid_two_way_factorial(param_vals = list(m_perturbation = seq(0.0, -2, -0.2),
fam = c("poisson", "gaussian", "NB")),
arm_names = c("Poisson", "Gaussian", "NB"),
arm_param = c("fam"))
param_grid
param_grid
fixed_params <- list(
seed = 4,
n = 100000,
B = 500,
n_processors = 10,
m_intercept = 2,
g_intercept = -2,
alpha = 0.95,
n_em_rep = 5,
lambda = NULL,
save_membership_probs_mult = 250,
sd = 0.15,
m_covariate_coefs = NULL,
g_covariate_coefs = NULL,
covariate_matrix = NULL,
m_offset = NULL,
g_offset = NULL
)
NULL
create_simulatr_specifier_object_v2
run_glmeiv_random_init_simulatr
?I
I(poisson())
c(I(gaussian()), I(poisson())
)
create_simulatr_specifier_object_v2
seq(0.0, 5, 0.25)
source('~/research_code/glmeiv-manuscript/R_scripts/simulations/create_simspec_objects.R')
param_grid <- expand.grid(m_perturbation = seq(0.0, -2, -0.2), fam = c(I(poisson(), I(gaussian()), I(MASS::negative.binomial(5)))))
c(I(poisson(), I(gaussian()), I(MASS::negative.binomial(5))
)
)
c(I(poisson()), I(gaussian()), I(MASS::negative.binomial(5))
)
param_grid <- expand.grid(m_perturbation = seq(0.0, -2, -0.2), fam = c(I(poisson()), I(gaussian()), I(MASS::negative.binomial(5))))
param_grid
I(c(poisson(), gaussian(), MASS::negative.binomial(5)))
param_grid <- expand.grid(m_perturbation = seq(0.0, -2, -0.2), fam = I(c(poisson(), gaussian(), MASS::negative.binomial(5))))
param_grid
param_grid <- expand.grid(m_perturbation = seq(0.0, -2, -0.2), fam = c(I(poisson()), I(gaussian()), I(MASS::negative.binomial(5))))
param_grid
dim(param_grid)
colnames(param_grid)
param_grid$fam
param_grid$fam[1]
param_grid$fam[2]
param_grid$fam[3]
param_grid$fam[4]
param_grid$fam[5]
param_grid$fam[100]
param_grid$fam[1000]
c(I(poisson()), I(gaussian()), I(MASS::negative.binomial(5)))
c(I(poisson()), I(gaussian()), I(MASS::negative.binomial(5)))
c(I(poisson()), I(gaussian()), I(MASS::negative.binomial(5)))
seq(0.0, -2, -0.2)
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = list(I(poisson()), I(gaussian()), I(MASS::negative.binomial(5))) )
param_grid
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = list(poisson(), gaussian(), MASS::negative.binomial(5)))
param_grid
param_grid$fam[1]
param_grid$fam[2]
param_grid$fam[3]
param_grid$fam[4]
param_grid$fam[100]
param_grid$fam %>% length()
dim(param_grid)
param_grid$fam[[1]]
param_grid$fam[[100]]
param_grid$fam[[50]]
param_grid$fam[[30]]
param_grid[5,]
x <- param_grid[5,]
x
x$g_perturbation
x[,"g_perturbation"]
x[[,"g_perturbation"]]
x[,"g_perturbation"]
x[,"fam"]
x[,"fam"][[1]]
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = c(poisson(), gaussian(), MASS::negative.binomial(5)))
param_grid
dim(param_grid)
seq(0.0, 5, 0.25) %>% length()
21 * 3
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = list(poisson(), gaussian(), MASS::negative.binomial(5)))
param_grid
param_grid[[1]]
param_grid[[2]]
param_grid[[1]]
param_grid[,]
param_grid[,]
param_grid[1,]
x <- param_grid[1,]
x$g_perturbation
x$fam
f <- x$fam
f
f$
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = c(I(poisson()), I(gaussian()), I(MASS::negative.binomial(5))))
nrow(param_grid)
param_grid
# Define simulatr specifier objects
sim_dir <- paste0(.get_config_path("LOCAL_GLMEIV_DATA_DIR"), "public/simulations/spec_objects")
to_save_sim_1 <- paste0(sim_dir, "/sim_spec_1.rds")
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = c(poisson(), gaussian(), MASS::negative.binomial(5)))
param_grid
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = list(poisson(), gaussian(), MASS::negative.binomial(5)))
param_grid
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = c("Gaussian", "Poisson", "NB"))
param_grid
# Define simulatr specifier objects
sim_dir <- paste0(.get_config_path("LOCAL_GLMEIV_DATA_DIR"), "public/simulations/spec_objects")
to_save_sim_1 <- paste0(sim_dir, "/sim_spec_1.rds")
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = c("Gaussian", "Poisson", "NB"))
param_grid
g_pert_grid <- seq(0.0, 5, 0.25)
g_pert_grid
to_save_sim_1 <- paste0(sim_dir, "/sim_spec_1.rds")
g_pert_grid <- seq(0.0, 5, 0.25)
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = c("Gaussian", "Poisson", "NB"))
param_grid$grid_id <- seq(1, nrow(param_grid))
param_grid
############################################
# Experiment 1
# No covariates or offsets
# Vary g_pert, fix all other parameters
# Vary distribution (Gaussian, Poisson, NB)
###########################################
sim_dir <- paste0(.get_config_path("LOCAL_GLMEIV_DATA_DIR"), "public/simulations/spec_objects")
############################################
# Experiment 1
# No covariates or offsets
# Vary g_pert, fix all other parameters
# Vary distribution (Gaussian, Poisson, NB)
###########################################
sim_dir <- paste0(.get_config_path("LOCAL_GLMEIV_DATA_DIR"), "public/simulations/spec_objects")
to_save_sim_1 <- paste0(sim_dir, "/sim_spec_1.rds")
param_grid <- expand.grid(g_perturbation = seq(0.0, 5, 0.25),
fam = c("Gaussian", "Poisson", "NB"))
